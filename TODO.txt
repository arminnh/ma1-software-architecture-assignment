FOR PROJECT DEFENSE: best is 25/05 - 27/05,
                     24/05 armin exam and monika project deadline

AFTER DEADLINE, BEFORE PROJECT DEFENSE:
    create use case log to print

In decompositions 1, 2, and 3, check decisions important for deployment and add them in rationale

decomposition 5:
    create components and interfaces in vpp
    move all methods to vpp

report:
    check exceptions
    check data types

Need to do this somehwere, UC7 ??
    If a pluggable device is 'inactive' (because disconnected), then it is automatically 'unplaced' in the topology, so no need to also explicitly check device status

==========================================================================
================================ REPORT ==================================
==========================================================================

    1. Architectural Decisions:
        *) Architectural decisions for each QAS
        *) Other decisions
        *) Discussion
    2. Client-server view (UML Component diagram):
        *) The context diagram of the client-server view
        *) The primary diagram
    3. Decomposition view (UML Component diagram)
        Gateway, PluggableDeviceDB, Application execution subsystem
    4. Deployment view (UML Deployment diagram):
        *) The context diagram of the deployment view
        *) The primary diagram
    5. Scenarios:
        *) UC11: Sensor data being processed by the system
        *) UC19: Subscribing to an application
        *) UC12: Applications issuing actuation commands
        *) UC14, Av3, UC18: Sensors/actuators failing, causing
                            (i) deactivation of specic applications,
                            (ii) a redundant sensor/actuator to take over in the context of a single application.
        *) Av2 : Application crash
        *) U2, UC4: Plugging in a new pluggable device (sensor or actuator)
        *) Av1, UC15: Detection and handling of communication channel failure
        *) UC22, U1: Upgrading an application
        *) UC26, UC27, UC12: Sending actuation commands via a mobile app
    6. Element catalog and datatypes:

==========================================================================
================================== BOOK ==================================
==========================================================================

    130 warehouse topology baseline
    153 summary

    294 facade

    305 component partioning
    329 application control
    351 authorization

    371 Synchronisation
    394 copied value

    410 mediator
    418 data transfer object
    420 message

==========================================================================
================================ QUESTIONS ===============================
==========================================================================

Interfaces: What's the point of exceptions? Do we use them for alternative scenario's? Like "not found exception"
    -> if we good designed system then we don't need exceptions
    -> not mandatory, but data flow should be clear for the alternative scenarios in use cases

Package or component in diagram for Gateway, Online Service, ...?
    -> both are ok, both make it clear that we separate the components in groups
    -> components could be used for decomposition diagram

Where to create the actual db queries?
    -> not necessary at this level of abstraction, send the parameters along and make
       it clear what you want from the query. In the actual implementation, the query
       will probably be formed before it reached the DB.

How to make interface names transparent?

Av2: Failure of application execution components
    => ApplicationExecutionSubsystemMonitor

Av2: up time?

P1: for replication of components, do we need to add routing or can we just add this in the rationale?

Av1: Interfaces between brokers?
     send/receive?
     p274

How is hardware linked to Infrastructure owners?
    => 1 gateway <-> 1 infrastructure owner
    => when an IO buys/orders hardware, then that hardware is linked to the IO after the order is completed.
