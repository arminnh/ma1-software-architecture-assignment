development of a shared Cyber Physical System (CPS) infrastructure
Building automation

Availability and reliability of the shared platform offered to applications
is of paramount importance.

Our goal is to sell SIoTIP gateways and additional hardware devices,
such as sensors, enabling the deployment of a (shared) IoT infrastructure.
Furthermore, third-party developers can build applications on top of the
available infrastructure.
On the one hand, companies want to increase their business value
by automating or simplifying building management using IoT devices.
On the other hand, application providers want to be able to develop and sell
applications leveraging the available infrastructure to these companies.

Over time our platform will collect significant amounts of data:
raw data from sensors as well as application (usage) information.

In this model, sensors and actuators connect to a gateway,
and all gateways connect to the Online Service to synchronise data.
actuators | * ----- 1 | mote
sensors   | * ----- 1 | mote
mote      | * ----- 1 | gateway
Online service = system that comminuticates with gateways
storage/database ?

synchronisation activities are initiated by the gateway
the Online Service must also be able to push application commands

SIoTIP Online Service is an online system which collects data collected by the
sensors at each gateway, runs applications, manages gateway and application
configurations, and provides a web portal to which users can connect.

===============================================================================

Customer organisations:
    subscribe to applications
    unsubscribe from applications
Infrastructure owner:
    buy new hardware,
    install new hardware,
    monitor (subscribe) connected hardware,
    maintain topology of infastructure,
    allocate installed hardware to specific customers
End-users:
    interact via mobile app, web browser, PC
MicroPnP mote manufacturer:
    sell motes
Sensor and actuator manufacturer:
    sell sensors/actuators
Application providers:
    sell (subscriptions to) applications
    equire a development environment providing access to APIs provided by SIoTIP
SIoTIP system administrators:
    monitor/maintain system (performance/scalability)
    assist other parties
The SIoTIP Corporation:
    want a large number of infrastructure owners
    attract many application providers
Telecom operators:
    provide means for the gateways to communicate with
    the Online Service and vice versa
Server providers:
    provides physical or virtual servers

===============================================================================

SIoTIP must provide services or APIs to accommodate such a distributed
application, and deal with all encompassing communication between different
parts of an application.

provide APIs both for code running on the gateway and on the Online Service.

For customer organisations, applications are the primary way to interact with
the system, and thus to leverage the installed sensors and actuators.

some people can be allowed to issue commands to the application via a provided
front-end, e.g. a mobile app or web browser. These people are thus assigned 
the role of end-user from the point of view of SIoTIP

choose for updates where all existing instances of the applications are
automatically updated to the new version (e.g. a minor bug fix update) or to
require customer organisations to explicitly update to the new version 
(e.g. a major feature update which requires a new subscription).

when uploaded, each application is automatically tested in a sandbox environment

Each device is initialised with a functional, default configuration, which can
then be adjusted by the platform, application, or user

*** each mote periodically sends a heartbeat message to its gateway listing
the sensors and actuators plugged in to it along with a timestamp. In case of
unavailability, applications and infrastructure owners can be notified.

Data from sensors and actuators needs to be stored on both the gateway and
Online Service side.

In case of events that are interesting to customer organisations or specific
end-users, applications can trigger notifications and alarms.

Gateway installation involves connecting it to the internet via a secondary
network interface (i.e., a wired or wifi network). The Gateway will then
register itself with the Online Service. The Gateway identifies itself, and
the Gateway identifier is used by the system to link it to the infrastructure
owner that has originally purchased it (information which was registered on
purchase). Afterwards, communication in both directions is possible, as
described below.

A gateway should periodically synchronise data. Besides periodic
synchronisations, important data such as alarms and notifications must be
communicated to the Online Service as soon as possible. The Online Service
also has to communicate with the gateway to, for example, update sensor 
config urations or activate actuators.

unavoidable hardware failures should, where possible, be dealt with by
leveraging redundancies in the deployed infrastructure

Since the infrastructure is shared among multiple users, it is important to
authenticate them

motes can use other motes as intermediaries in order for the data to reach the
destination. For resource access, the devices use interfaces compliant with
the Constrained Application Protocol (CoAP), which is a RESTful protocol

The motes can emit the following types of messages:
1. Data, 2. Mote heartbeat, 3. Device connected /disconnected
Relaying information to the motes by the gateway is done by GET and PUT
requests.

it is very likely that over time new (types of) sensors and actuators have to
be added


Example apps:
Fire control application
Building access control application
Burglary detection application
Smart heating application
Light management application

===============================================================================

3.4 Services offered to stakeholders

Customer organisation dashboard: 
This dashboard allows customer organisations
to (un)subscribe to and configure applications (and other tasks such as
consulting their invoices). Furthermore, customer organisations can manage
the roles of the end-users of their application.

Infrastructure owner dashboard:
assign (parts of) the installed gateways, sensors and actuators to customer
organisations, add new customer organisations or remove an existing one.
order hardware, configure topology, consult any received 
notifications and alarms

System administrator dashboard:
monitor and manage the entire platform. showing information about running 
applications, offering the ability to shut applications down, receiving and
viewing notifications about SIoTIP system components as well as external
component failures.

Application provider dashboard:
get an overview of their applications and provides the ability to upload new
and update existing applications.

The SIoTIP organisation offers a Service Level Agreement (SLA) enclosed as a
part of the provided support towards our customer organisations. This
agreement stipulates certain quality requirements. A number of contracts will
have to be negotiated with other stakeholders.
